import vk
from pymongo import MongoClient

mongo_client = MongoClient()

accesstoken = '' # токен от живого аккаунта, убрала из соображений безопасности

# открыть сессию, обязательно указать номер версии
session = vk.Session(access_token=accesstoken)
vk_api = vk.API(session, v='5.103')

# ссылки на пользователей
user1 = 'https://vk.com/id10123679'
#user2 = 'https://vk.com/id543097317'
user2 = 'https://vk.com/rusalka'
#user2 = 'https://vk.com/id62288402'

# получить id из ссылок
def id_get(user_link):
    if 'id' in user_link:
        user_id = int(user_link.split('id')[-1])
    else:
        user_name = user_link.split('/')[-1]
        user_id = vk_api.users.get(user_ids=user_name)[0]['id']
    return int(user_id)

user1_id = id_get(user1)
user2_id = id_get(user2)

# словари для сохранения цепочек
friends_dict1, friends_dict2, friends_dict3, friends_dict4, friends_dict5 = {}, {}, {}, {}, {}

# первичные списки друзей:
user1_friends_id = vk_api.friends.get(user_id=user1_id)['items']
user2_friends_id = vk_api.friends.get(user_id=user2_id)['items']

# проверяем, не друзья ли пользователи между собой
if user2_id in user1_friends_id:
    #friends_chain.append(user2_id)
    friends_dict1 = {'first_user': user1_id, 'second_user': user2_id}
else:
    for user1_friend in user1_friends_id:
        if friends_dict2:
            break
        try:
            user_friends_id = vk_api.friends.get(user_id=user1_friend)['items']
            if user2_id in user_friends_id:
                friends_dict2 = {'first_user': user1_id, '1': user1_friend, 'second_user': user2_id}
                break
            else:
                if friends_dict3:
                    break
                for user2_friend in user2_friends_id:
                    try:
                        if user2_friend in user_friends_id:
                            friends_dict3 = {'first_user': user1_id, '1': user1_friend, '2': user2_friend, 'second_user': user2_id}
                            break
                        else:
                            if friends_dict4:
                                break
                            mutual = vk_api.friends.getMutual(source_uid=user1_friend, target_uid=user2_friend)
                            if mutual:
                                friends_dict4 = {'first_user': user1_id, '1': user1_friend, '2': mutual[0], '3': user2_friend,
                                                 'second_user': user2_id}
                                break
                            else:
                                if friends_dict5:
                                    break
                                for user in user_friends_id:
                                    try:
                                        mutuals = vk_api.friends.getMutual(source_uid=user, target_uid=user2_friend)
                                        if mutuals:
                                            friends_dict5 = {'first_user': user1_id, '1': user1_friend, '2': user,
                                                             '3': mutuals[0], '4': user2_friend,
                                                             'second_user': user2_id}
                                            break
                                        else:
                                            pass
                                    except vk.exceptions.VkAPIError as e:
                                        pass
                    except vk.exceptions.VkAPIError as e:
                        #print(f'Профиль {user2_friend} закрытый')
                        #user1_friends_id.remove(user2_friends_id.index(user2_friend))
                        pass
        except vk.exceptions.VkAPIError as e:
            #print(f'Профиль {user1_friend} закрытый')
            #user1_friends_id.remove(user1_friends_id.index(user1_friend))
            pass

def process_item(item):
    database = mongo_client['vk_chain']  # передается в строке имя базы, если такой нет - будет создана
    collection = database[f'{user1_id} and {user2_id}']
    collection.insert_one(item)
    return item

if friends_dict1:
    print(f'Для пользователей с id {user1_id} и {user2_id} цепочка рукопожатий: {friends_dict1}')
    process_item(friends_dict1)
elif friends_dict2:
    print(f'Для пользователей с id {user1_id} и {user2_id} цепочка рукопожатий: {friends_dict2}')
    process_item(friends_dict2)
elif friends_dict3:
    print(f'Для пользователей с id {user1_id} и {user2_id} цепочка рукопожатий: {friends_dict3}')
    process_item(friends_dict3)
elif friends_dict4:
    print(f'Для пользователей с id {user1_id} и {user2_id} цепочка рукопожатий: {friends_dict4}')
    process_item(friends_dict4)
elif friends_dict5:
    print(f'Для пользователей с id {user1_id} и {user2_id} цепочка рукопожатий: {friends_dict5}')
    process_item(friends_dict5)
else:
    print('Связи не найдены')
